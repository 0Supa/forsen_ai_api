package tts_test

import (
	"app/tts"
	"context"
	"net/http"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"

	_ "embed"
)

//go:embed megu_denoised.wav
var refAudioTest []byte

func TestTTS(t *testing.T) {
	assert := assert.New(t)

	client := tts.New(http.DefaultClient, &tts.Config{
		URL: "http://192.168.2.177:4111/tts",
	})

	resp, err := client.TTS(context.Background(), "This is a very long text spoken by forsen voice, generated by style tts 2, that is very good, but unfortunately the end of sentences has very weird peak noise, and the length of it is very random.", refAudioTest)
	assert.NoError(err)

	err = os.WriteFile("result.wav", resp, 0o666)
	assert.NoError(err)
}

func TestForsenTTS(t *testing.T) {
	assert := assert.New(t)

	client := tts.New(http.DefaultClient, &tts.Config{
		URL: "http://192.168.2.177:4111/tts",
	})

	resp, err := client.TTS(context.Background(), "This is a very long text spoken by forsen voice, generated by style tts 2, that is very good, but unfortunately the end of sentences has very weird peak noise, and the length of it is very random. This is a very long text spoken by forsen voice, generated by style tts 2, that is very good, but unfortunately the end of sentences has very weird peak noise, and the length of it is very random.", nil)
	assert.NoError(err)

	err = os.WriteFile("result.wav", resp, 0o666)
	assert.NoError(err)
}
